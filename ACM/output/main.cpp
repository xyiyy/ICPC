/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author xyiyy @https://github.com/xyiyy
 */

#include <iostream>
#include <fstream>

//#####################
//Author:fraud
//Blog: http://www.cnblogs.com/fraud/
//#####################
//#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <sstream>
#include <ios>
#include <iomanip>
#include <functional>
#include <algorithm>
#include <vector>
#include <string>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <climits>
#include <cctype>

using namespace std;
#define XINF INT_MAX
#define INF 0x3FFFFFFF
#define mp(X, Y) make_pair(X,Y)
#define pb(X) push_back(X)
#define rep(X, N) for(int X=0;X<N;X++)
#define rep2(X, L, R) for(int X=L;X<=R;X++)
#define dep(X, R, L) for(int X=R;X>=L;X--)
#define clr(A, X) memset(A,X,sizeof(A))
#define IT iterator
#define ALL(X) (X).begin(),(X).end()
#define PQ std::priority_queue
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
typedef vector<PII> VII;
typedef vector<int> VI;

int getTheAnswer() {
    return 42;
}
//
// Created by xyiyy on 2015/8/16.
//

#ifndef ICPC_BABYSTEPGIANTSTEP_HPP
#define ICPC_BABYSTEPGIANTSTEP_HPP

//O((m+n/m)logm)
//当m和n/m接近时为O(sqrt(n)logn)
//a^x = b (mod n)
//n为素数，无解返回-1
//
// Created by xyiyy on 2015/8/5.
//

#ifndef ICPC_INV_HPP
#define ICPC_INV_HPP
typedef long long ll;

void extgcd(ll a, ll b, ll &d, ll &x, ll &y) {
    if (!b) {
        d = a;
        x = 1;
        y = 0;
    }
    else {
        extgcd(b, a % b, d, y, x);
        y -= x * (a / b);
    }
}

ll inv(ll a, ll mod) {
    ll x, y, d;
    extgcd(a, mod, d, x, y);
    return d == 1 ? (x % mod + mod) % mod : -1;
}


#endif //ICPC_INV_HPP

ll mul_mod(ll a, ll b, ll mod) {
    return a * b % mod;
}

int bsgs(int a, int b, int n) {
    int m, v, e = 1, i;
    m = (int) sqrt(n + 0.5);
    map<int, int> x;
    rep(i, m) {
        if (!x.count(e))x[e] = i;
        e = mul_mod(e, a, n);
    }
    v = inv(e, n);
    rep(i, m) {
        if (x.count(b))return i * m + x[b];
        b = mul_mod(b, v, n);
    }
    return -1;
}

#endif //ICPC_BABYSTEPGIANTSTEP_HPP

class poj2417bsgs {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n, a, b;
        while (in >> n >> a >> b) {
            int ans = bsgs(a, b, n);
            if (ans == -1)out << "no solution" << endl;
            else out << ans << endl;
        }
    }
};

int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(0);
    poj2417bsgs solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}